install.packages("stringi")
install.packages("stringi")
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("r-lib/devtools")
devtools::install_github("devtools")
devtools::install_github("r-lib/devtools")
install.packages("backports")
install.packages("backports")
devtools::install_github("r-lib/devtools")
install.packages("Rcpp")
install.packages("Rcpp")
devtools::install_github("r-lib/devtools")
install.packages("fs")
install.packages("fs")
devtools::install_github("r-lib/devtools")
install.packages("usethis")
install.packages("usethis")
devtools::install_github("r-lib/devtools")
install.packages("installr")
library(installr)
updateR()
install.packages("rlang")
devtools::install_github("r-lib/devtools")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
devtools::install_github("r-lib/devtools")
install.packages("rstudioapi")
rstudioapi::isAvailable("0.99.149")
install.packages("rstudioapi")
install.packages("rstudioapi")
install.packages("rstudioapi")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
${RTOOLS40_HOME}
library(devtools)
has_devel()
PATH="${RTOOLS40_HOME}\usr\bin;${PATH}"
Sys.which("make")
install.packages("jsonlite", type = "source")
library(devtools)
has_devel()
setwd("GitHub/mrclust")
library(devtools)
devtools::use_vignette("mrclust")
devtools::build_vignettes()
devtools::build_vignettes()
load_all()
devtools::load_all()
devtools::build_vignettes()
devtools::check()
check_failures()
devtools::check_failures()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
tools::compactPDF("~/doc/mrclust.pdf")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
help("R_GSCMD")
find_gs_cmd(gs_cmd = "")
find_gs_cmd()
tools::find_gs_cmd()
system.partition = 'c:'
dirs = c('Program Files', 'Program Files (x86)')
for (dir in dirs) {
dir.list = list.dirs(file.path(system.partition, dir), recursive = FALSE)
GsinList = grepl(pattern = 'gs', x = dir.list)
if (sum(GsinList) > 0) {
gsDirectory = which(GsinList == TRUE)
GsExeFiles = list.files(
dir.list[gsDirectory],
recursive = TRUE,
pattern = 'gswin',
include.dirs = TRUE,
full.names = TRUE
)[1]
message('Gs found! ~> ',GsExeFiles)
Sys.setenv(R_GSCMD = GsExeFiles)
break
}
}
Gs found! ~> c:/Program Files/gs/gs9.21/bin/gswin64.exe
help("R_GSCMD")
system.partition = 'c:'
dirs = c('Program Files', 'Program Files (x86)')
for (dir in dirs) {
dir.list = list.dirs(file.path(system.partition, dir), recursive = FALSE)
GsinList = grepl(pattern = 'gs', x = dir.list)
if (sum(GsinList) > 0) {
gsDirectory = which(GsinList == TRUE)
GsExeFiles = list.files(
dir.list[gsDirectory],
recursive = TRUE,
pattern = 'gswin',
include.dirs = TRUE,
full.names = TRUE
)[1]
message('Gs found! ~> ',GsExeFiles)
Sys.setenv(R_GSCMD = GsExeFiles)
break
}
}
Sys.setenv(R_GSCMD)
Sys.setenv("R_GSCMD")
Sys.getenv("R_GSCMD")
Sys.getenv("R_GSCMD")
tools::find_gs_cmd()
tools::find_gs_cmd()
system.partition = 'c:'
dirs = c('Program Files', 'Program Files (x86)')
for (dir in dirs) {
dir.list = list.dirs(file.path(system.partition, dir), recursive = FALSE)
GsinList = grepl(pattern = 'gs', x = dir.list)
if (sum(GsinList) > 0) {
gsDirectory = which(GsinList == TRUE)
GsExeFiles = list.files(
dir.list[gsDirectory],
recursive = TRUE,
pattern = 'gswin',
include.dirs = TRUE,
full.names = TRUE
)[1]
message('Gs found! ~> ',GsExeFiles)
Sys.setenv(R_GSCMD = GsExeFiles)
break
}
}
devtools::check()
devtools::check_rhub()
Sys.getenv("R_ENVIRON")
Sys.getenv("R_HOME")
Sys.getenv("R_CHECK_ENVIRON")
Add-Content c:\Users\$env:USERNAME\Documents\.Renviron "TEST_VARIABLE_1=my_username"
edit_r_environ()
usethis::edit_r_environ()
Sys.getenv("R_GSCMD")
