library(devtools)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
R CMD CHECK --as-cran
check_for_cran()
devtools::check_for_cran()
rhub::check_for_cran()
rhub::check_for_cran(email="am2609@medschl.cam.ac.uk")
library(data.table)
library(MendelianRandomization)
library(mclust)
library(rmarkdown)
rhub::check_for_cran(email="am2609@medschl.cam.ac.uk")
rhub::check_for_cran(email="am2609@medschl.cam.ac.uk")
library(data.table)
install.packages("lindr")
install.packages("lintr")
install.packages("styler")
lintr::lint_package(mrclustr)
lintr::lint_package(mrclust)
lintr::lint_package(best.clust.R)
lintr::lint_package("mrclustr")
usethis::use_tidy_style()
commit
usethis::use_tidy_style()
lintr::lint_package("mrclustr")
res1 <- round( as.numeric( t( rij(
1:m, 1:n_clust, clust_probs, theta, theta_sd, theta_mn, junk_mixture, df, junk_mean, junk_sd,
null_mixture, null_mean, null_sd ))), 3)
seq_len(17)
seq_len(1:17)
length(17)
seq_len(1:17)
seq_len(c("17")
)
devtools::check()
lintr::lint_package("mrclustr")
lintr::lint_package("mrclustr")
