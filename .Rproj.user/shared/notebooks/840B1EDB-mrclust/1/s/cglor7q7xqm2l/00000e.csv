"0","############################"
"0","########### SBP-CAD analysis"
"0","############################"
"0",""
"0","res_em = mr_clust_em(theta = ratio_est, theta_se = ratio_est_se, bx = bx,"
"0","                     by = by, bxse = bxse, byse = byse, obs_names = snp_names);"
"1","Called from: "
"1","eval(expr, p)
"
"1","debug at ~/GitHub/mrclust/R/junk_clust_plot.R#117: "
"1","p <- ggplot2::ggplot(data = res, ggplot2::aes(theta, jit_clusts)) + 
"
"1","    ggplot2::geom_point(ggplot2::aes(colour = cluster_class), 
"
"1","        size = 1.55) + ggplot2::scale_color_manual(values = cbpalette) + 
"
"1","    ggplot2::geom_errorbarh(ggplot2::aes(xmin = theta - 1.96 * 
"
"1","        theta_se, xmax = theta + 1.96 * theta_se, color = cluster_class), 
"
"1","        linetype = ""solid"") + ggplot2::geom_hline(yintercept = 0, 
"
"1","    linetype = ""dotted"", color = cbpalette[1], lwd = 0.5) + 
"
"1","    if (junk_mixture) {
"
"1","        ggplot2::stat_function(fun = gen_t_scale, args = with(res, 
"
"1","            c(df = 4, mu = mu, sig = sig, log = FALSE, scale = shrink)), 
"
"1","            ggplot2::aes(colour = ""Junk density""))
"
"1","    } else {
"
"1","        NULL
"
"1","    } + ggplot2::ylim(miny, maxy)
"
"2","Error in (function (srcref)  : unimplemented type (29) in 'eval'
"
