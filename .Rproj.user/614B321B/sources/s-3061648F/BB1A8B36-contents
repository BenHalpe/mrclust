junk.clust.plot = function(res, xrange = NULL, sig = NULL, mu = 0, mu.null = 0, junk.mixture = TRUE, null.mixture = TRUE){

  cbPalette <- c("#000000","#999999", "#0072B2", "#D55E00", "#CC79A7", "#009E73", "#56B4E9", "#E69F00","#F0E442") ;
  n_palette = length(unique(res$cluster)) - length(cbPalette);
  if(n_palette>=0){
    cbPalette = c(cbPalette, RColorBrewer::brewer.pal(max(3,n_palette+1), "Spectral")[1:(n_palette+1)]);
  }

  # redefine null cluster as cluster zero
  res$cluster[res$cluster.class == "Null" | res$cluster.class == "Junk"] = 0;
  res$clusters = as.factor(res$cluster);

  junk.obs = res$cluster.class == "Junk";
  null.obs = res$cluster.class == "Null"
  clust.obs = which(!res$cluster.class == "Null" & !res$cluster.class == "Junk");
  theta = res$theta;
  theta.se = res$theta.se;

  if(is.null(sig)){
    rng.thet = range(theta)
    max.disp = which.max(abs(theta)+2*theta.se);
    sig = (rng.thet[2]-rng.thet[1] + theta.se[max.disp]);
  }
  if(is.null(mu)){
    mu = 0;
  }
  if(sum(null.obs)>0){
    sig.null = max(theta.se[null.obs]);
    mu.null = 0;
  }else{sig.null = 1; mu.null = 0;}

  jit.junk = gen.t(theta[junk.obs], df = 4, mu = mu, sig = sig, log=F);
  jit.null = stats::dnorm(theta[ null.obs], mean = mu.null, sd = sig.null, log=F)
  jit.clusts = rep(0, length(theta));
  jit.clusts[junk.obs] = jit.junk*stats::runif(sum(junk.obs), 0, 0.5);
  jit.clusts[null.obs] = jit.null*stats::runif(sum(null.obs), 0, 0.5);
  if(sum(junk.obs)>0 | sum(null.obs)>0){mny = max(c(jit.clusts[junk.obs],jit.clusts[null.obs]));}else{mny = 1;}
  jit.clusts[clust.obs] = -stats::runif(length(clust.obs), 0, mny);

  res$jit.clusts = jit.clusts;
  maxx = max(c( theta+2.5*theta.se, theta-2.5*theta.se));
  minx = min(c(theta+2.5*theta.se, theta-2.5*theta.se));

  maxy = if(sum(junk.obs | null.obs)>0){
    max(jit.clusts[junk.obs | null.obs]);
  }else if(sum(junk.obs | null.obs)==0 & junk.mixture & !null.mixture){
    max(gen.t(c(minx,maxx), mu = mu, sig = sig, log = FALSE));
  }else if(sum(junk.obs | null.obs)==0 & !junk.mixture & null.mixture){
    if(sum(sig.null)>0){stats::dnorm(0, 0, sig.null)}else{0};
  }else if(sum(junk.obs | null.obs)==0 & junk.mixture & null.mixture){
    max(max(gen.t(c(minx,maxx), mu = mu, sig = sig, log = FALSE)), if(sum(sig.null)>0){stats::dnorm(0, 0, sig.null)}else{0});
  }

  miny = if(length(clust.obs)>0){min(jit.clusts[clust.obs])}else{0};
  mx.dens = if(junk.mixture & !null.mixture){
    gen.t(mu, df = 4, mu = mu, sig = sig, log = FALSE);
  }else if(!junk.mixture & null.mixture){
    maxy
  }else if(junk.mixture & null.mixture){
    max(gen.t(mu, mu = mu, sig = sig, log = FALSE),stats::dnorm(0, 0, sig.null));
  }else{0}

  if(maxy < mx.dens){
    shrink = maxy/mx.dens;
    res$jit.clusts[junk.obs | null.obs] = shrink*jit.clusts[junk.obs | null.obs];
    minx = 1.25*minx;
  }else{shrink = 1;}

  if(!is.null(xrange)){
    maxx = xrange[2];
    minx = xrange[1];
  }

  annotations <- data.frame(
    xpos = c(minx, minx),
    ypos =  c(-miny, miny/1.25),
    annotateText = c("Junk/null\nestimates","Clustered\nestimates"),
    hjustvar = c(0, 0) ,
    vjustvar = c(1, 0)) #<- adjust


  p <- ggplot2::ggplot(data = res, ggplot2::aes(theta, jit.clusts)) +
    ggplot2::geom_point(ggplot2::aes(colour = cluster.class), size = 1.55) +
    ggplot2::scale_color_manual(values = cbPalette) +
    ggplot2::geom_errorbarh(
      ggplot2::aes(xmin = theta-1.96*theta.se, xmax = theta+1.96*theta.se, color = cluster.class),
      #  width = 0.1,
      linetype = "solid") +
    ggplot2::geom_hline(yintercept=0, linetype="dotted", color = cbPalette[1], lwd=0.5) +
    if(junk.mixture){ggplot2::stat_function(
      fun = gen.t.scale,
      args = with(res, c(df = 4, mu = mu, sig = sig, log = FALSE, scale = shrink)),
      ggplot2::aes(colour = "Junk density"))}else{NULL} + ggplot2::ylim(miny,maxy);
  clusts = unique(res$cluster.class);
  clusts = clusts[order(clusts)];
  ind = which(!clusts %in% "Null" & !clusts %in% "Junk")
  if(sum(ind)>0){clust.label = c("Junk cluster")}else{clust.label = NULL;}
  if(sum(ind)>0){
    for(i in 1:length(ind)){
      mn = res$cluster_mean[res$cluster==as.numeric(clusts[ind[i]])][1];
      clust.label = c(clust.label, paste0("cluster_",ind[i]))
      col = cbPalette[i];
      p = p + ggplot2::geom_segment(x = mn, y = miny, xend = mn, yend = 0, color = col, linetype = "dotted", lwd=0.2)
    }
  }
  p = p + ggplot2::geom_text(data=annotations,ggplot2::aes(x=xpos,y=ypos,hjust=hjustvar,vjust=vjustvar,label=annotateText), size = 3) +
    ggplot2::guides(color=ggplot2::guide_legend(title= "Cluster", labels = clust.label)) + ggplot2::xlim(minx,maxx);
  p = p + ggplot2::ylim(miny,maxy) +
    ggplot2::ylab("") + ggplot2::xlab("Two-stage ratio estimate") +
    ggplot2::ggtitle("Null and/or junk observations (top)\nand cluster partitioned ratio estimates (bottom)") +
    ggplot2::theme_bw() +
    ggplot2::theme(
      axis.ticks.y = ggplot2::element_blank(),        ## <- this line
      axis.text.y = ggplot2::element_blank(),
      panel.background = ggplot2::element_rect(colour = "white"),
      plot.background = ggplot2::element_blank(),
      legend.position = "bottom");

  if(null.mixture & sum(null.obs)>0){
    p = p +  ggplot2::stat_function(
      fun = scaled.dnorm,
      args = with(res, c(mean = mu.null, sd = sig.null, log = FALSE, scale = shrink)),
      ggplot2::aes(colour = "Null density")) +
      ggplot2::ylab("") + ggplot2::xlab("Two-stage ratio estimate") +
      ggplot2::ggtitle("Null and/or junk observations (top)\nand cluster partitioned ratio estimates (bottom)") +
      ggplot2::theme_bw() +
      ggplot2::theme(
        axis.ticks.y = ggplot2::element_blank(),        ## <- this line
        axis.text.y = ggplot2::element_blank(),
        panel.background =ggplot2::element_rect(colour = "white"),
        plot.background = ggplot2::element_blank(),
        legend.position = "bottom");
  }

  return(p)
}
